@inherits LayoutComponentBase
@inject Blazor.Fluxor.IStore Store

@using Blazor.Fluxor
@using Gumby.Store.User
@inject IState<UserState> UserState
@inject IDispatcher Dispatcher

@Store.Initialize()

<MatAppBarContainer>
    <MatAppBar Fixed="true">
        <MatAppBarRow>
            <MatAppBarSection>
                <MatIconButton OnClick="@ToggleDrawer" Icon="menu"></MatIconButton>
                <MatAppBarTitle>Gumby</MatAppBarTitle>
            </MatAppBarSection>
            <MatAppBarSection Align="@MatAppBarSectionAlign.End">
                <MatIconButton Icon="@MatIconNames.Search"></MatIconButton>
            </MatAppBarSection>
        </MatAppBarRow>
    </MatAppBar>
    <MatAppBarContent>
        <MatDrawerContainer Style="position: fixed; width: 50vw; height: 100vh; z-index: 100;">
            <MatDrawer Opened="@_isOpenDrawer">
                <MatList>
                    <MatListItem OnClick="@OpenLoginModal"> <MatIconButton Icon="@MatIconNames.Person"></MatIconButton> @UserState.Value.User.Username </MatListItem>
                    <MatListDivider></MatListDivider>
                    <MatListItem OnClick="@ToggleDrawer" Href="/"> <MatIconButton Icon="@MatIconNames.Home"></MatIconButton> Home </MatListItem>
                    <MatListDivider></MatListDivider>
                    <MatListItem OnClick="@ToggleDrawer" Href="/routes"> <MatIconButton Icon="@MatIconNames.Flag"></MatIconButton> Routes </MatListItem>
                </MatList>
            </MatDrawer>
        </MatDrawerContainer>
    </MatAppBarContent>
</MatAppBarContainer>

@Body

<MatDialog IsOpen="@_isOpenLoginModal">
    <MatDialogTitle>Login</MatDialogTitle>
    <MatDialogContent>
        <MatTextField @bind-Value="@NewUserName" Label="Username"></MatTextField>
    </MatDialogContent>
    <MatDialogActions>
        <MatButton OnClick="@CancelLoginClicked">Cancel</MatButton>
        <MatButton OnClick="@OkLoginClicked">OK</MatButton>
    </MatDialogActions>
</MatDialog>

@functions{

    private bool _isOpenDrawer = false;
    private bool _isOpenLoginModal = false;

    private string _newUserName;
    public string NewUserName
    {
        get => _newUserName;
        set
        {
            _newUserName = value;
            this.StateHasChanged();
        }
    }            

    void ToggleDrawer()
    {
        _isOpenDrawer = !_isOpenDrawer;
    }

    void OpenLoginModal()
    {
        _isOpenDrawer = false;
        _isOpenLoginModal = true;
    }

    void OkLoginClicked()
    {
        Dispatcher.Dispatch(new LoginUserAction(NewUserName));
        _isOpenLoginModal = false;
        NewUserName = null;
    }

    void CancelLoginClicked()
    {
        _isOpenLoginModal = false;
    }
}
